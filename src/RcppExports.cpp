// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// BS_call
double BS_call(const double V, const double D, const double T, const double r, const double std);
RcppExport SEXP _DtD_BS_call(SEXP VSEXP, SEXP DSEXP, SEXP TSEXP, SEXP rSEXP, SEXP stdSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type V(VSEXP);
    Rcpp::traits::input_parameter< const double >::type D(DSEXP);
    Rcpp::traits::input_parameter< const double >::type T(TSEXP);
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type std(stdSEXP);
    rcpp_result_gen = Rcpp::wrap(BS_call(V, D, T, r, std));
    return rcpp_result_gen;
END_RCPP
}
// get_underlying
double get_underlying(const double S, const double D, const double T, const double r, const double std, const double tol);
RcppExport SEXP _DtD_get_underlying(SEXP SSEXP, SEXP DSEXP, SEXP TSEXP, SEXP rSEXP, SEXP stdSEXP, SEXP tolSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const double >::type S(SSEXP);
    Rcpp::traits::input_parameter< const double >::type D(DSEXP);
    Rcpp::traits::input_parameter< const double >::type T(TSEXP);
    Rcpp::traits::input_parameter< const double >::type r(rSEXP);
    Rcpp::traits::input_parameter< const double >::type std(stdSEXP);
    Rcpp::traits::input_parameter< const double >::type tol(tolSEXP);
    rcpp_result_gen = Rcpp::wrap(get_underlying(S, D, T, r, std, tol));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DtD_BS_call", (DL_FUNC) &_DtD_BS_call, 5},
    {"_DtD_get_underlying", (DL_FUNC) &_DtD_get_underlying, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_DtD(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
